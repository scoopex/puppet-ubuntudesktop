# == Class: ubuntudesktop::profile::system
#
# Setup my personal ubuntu desktop
#
# === Authors
#
# Marc Schoechlin <marc.schoechlin@256bit.org>
#
#

class ubuntudesktop::aspect::system {

  augeas { 'set_grub_opts':
    context => '/files/etc/default/grub',
    changes => [
      "set GRUB_TIMEOUT '\"-1\"'",
      "set GRUB_GFXMODE '\"1280x1024\"'",
    ],
    notify  => Exec['update-grub']
  }
  -> exec { 'update-grub':
    user        => 'root',
    path        => '/usr/bin:/usr/sbin:/bin',
    refreshonly => true,
  }

  # Mount Options
  mount { '/':
    ensure  => 'mounted',
    device  => '/dev/mapper/ubuntu--vg-root',
    fstype  => 'ext4',
    options => 'defaults,noatime,nodiratime',
  }

  # Disable capslock
  augeas { 'disable_capslock':
    context => '/files/etc/default/keyboard',
    changes => "set XKBOPTIONS '\"ctrl:nocaps\"'",
    onlyif  => "match XKBOPTIONS not_include 'ctrl:nocaps'",
  }

  # Disable crash reporter
  augeas { 'disable_apport':
    context => '/files/etc/default/apport',
    changes => 'set enabled \'0\'',
  }

  # configure sudo
  file { '/etc/sudoers.d/':
    ensure  => 'directory',
    owner   => 'root',
    group   => 'root',
    mode    => '0755',
    recurse => true,
    purge   => true,
  }

  # configure sudo
  file { '/dev/uinput':
    ensure => 'present',
    owner  => 'marc',
    group  => 'root',
    mode   => '0750',
  }


  # Install a tiny script to update the system
  file { '/usr/local/sbin/ubuntu-update':
    owner  => 'root',
    group  => 'root',
    mode   => '0755',
    source => "puppet:///modules/${module_name}/ubuntu-update",
  }
  file { '/etc/sudoers.d/ubuntu-update':
    owner   => 'root',
    group   => 'root',
    mode    => '0644',
    content => @("EOF")
    # generated by puppet
    ${ubuntudesktop::user} ALL = NOPASSWD:/usr/local/sbin/ubuntu-update
    ${ubuntudesktop::user} ALL = NOPASSWD:${ubuntudesktop::homedir}/ms-env/bin/ubuntu-update
    | EOF
  }

  file { '/etc/sudoers.d/extra-permissions':
    owner   => 'root',
    group   => 'root',
    mode    => '0644',
    content => @("EOF")
    # generated by puppet
    ${ubuntudesktop::user} ALL = NOPASSWD:/usr/bin/systemctl restart bluetooth
    | EOF
  }


  file_line { 'sudo_env_keep':
    path  => '/etc/sudoers',
    line  => 'Defaults        env_keep += "HOME"',
    after => '.*env_reset.*'
  }

  file { '/etc/sudoers.d/shutdown':
    owner   => 'root',
    group   => 'root',
    mode    => '0644',
    content => @("EOF")
    # generated by puppet
    ${ubuntudesktop::user} ALL = NOPASSWD: /usr/sbin/halt
    ${ubuntudesktop::user} ALL = NOPASSWD: /usr/sbin/poweroff
    ${ubuntudesktop::user} ALL = NOPASSWD: /usr/sbin/reboot
    | EOF
  }

  file { '/etc/sudoers.d/puppet':
    owner   => 'root',
    group   => 'root',
    mode    => '0644',
    content => @("EOF")
    # generated by puppet
    ${ubuntudesktop::user} ALL = NOPASSWD:/usr/bin/librarian-puppet
    ${ubuntudesktop::user} ALL = NOPASSWD:/usr/bin/puppet
    ${ubuntudesktop::user} ALL = NOPASSWD:/bin/puppet
    | EOF
  }

  file { '/etc/rc.local':
    ensure  => present,
    owner   => 'root',
    group   => 'root',
    mode    => '0754',
    content => @(EOF)
      # generated by puppet
      rfkill block bluetooth
      echo disable > /proc/acpi/ibm/bluetooth
      | EOF
  }

  file { '/etc/udev/rules.d/99-hidraw-permissions.rules':
    ensure  => present,
    owner   => 'root',
    group   => 'root',
    mode    => '0644',
    content => @(EOT)
      # created by puppet
      KERNEL=="hidraw*", SUBSYSTEM=="hidraw", MODE="0660", GROUP="plugdev"
      |EOT
  }

  # Install a tiny script to update the system
  file { '/usr/sbin/passwd-sync':
    owner  => 'root',
    group  => 'root',
    mode   => '0755',
    source => "puppet:///modules/${module_name}/passwd-sync",
  }
  -> exec { "/usr/sbin/passwd-sync ${ubuntudesktop::user} root set":
    user   => 'root',
    unless => "/usr/sbin/passwd-sync ${ubuntudesktop::user} root check",
    path   => '/usr/bin:/usr/sbin:/bin',
  }

  # Apparmor
  package { 'apparmor-utils':
    ensure => installed,
  }

  service { 'puppet':
    ensure => stopped,
    enable => false
  }

}
